#!/bin/bash

# Exit on command errors and treat unset variables as an error
set -eu
#=================================================
# GENERIC STARTING
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# LOAD SETTINGS
#=================================================
# Set app specific variables
app=$YNH_APP_INSTANCE_NAME

# Check destination directory
DESTDIR="/var/www/$app"
[[ ! -d $DESTDIR ]] && ynh_die \
"The destination directory '$DESTDIR' does not exist.\
 The app is not correctly installed, you should remove it first."

# Retrieve arguments
domain=$(ynh_app_setting_get "$app" domain)
path_url=$(ynh_app_setting_get "$app" path_url)
# Compatibility with previous version
if [ -z "$path_url" ] ; then
  path_url=$(ynh_app_setting_get "$app" path)
  ynh_app_setting_set $app path_url "$path_url"
fi
path_url=$(ynh_normalize_url_path $path_url)
dbpass=$(ynh_app_setting_get "$app" mysqlpwd)
deskey=$(ynh_app_setting_get "$app" deskey)
final_path=$(ynh_app_setting_get "$app" final_path)
# Compatibility with previous version
if [ -z "$final_path" ] ; then
  final_path="/var/www/$app"
  ynh_app_setting_set $app final_path "$final_path"
fi

db_name=$(ynh_app_setting_get "$app" db_name)
# Compatibility with previous version
if [ -z "$db_name" ] ; then
  db_name=$app
  ynh_app_setting_set "$app" db_name "$db_name"
fi
db_user="$db_name"

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

BACKUP_BEFORE_UPGRADE # Backup the current version of the app
ynh_clean_setup () {
    BACKUP_FAIL_UPGRADE
}
ynh_abort_if_errors	# Stop script if an error is detected

#=================================================
# INSTALL DEPENDENCIES
#=================================================

ynh_install_app_dependencies "$PKG_DEPENDENCIES"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

# Create tmp directory and fetch app inside
TMPDIR=$(ynh_mkdir_tmp)
extract_wallabag "$TMPDIR"

#=================================================
# CREATE DEDICATED USER
#=================================================

ynh_system_user_create $app # Create dedicated user if not existing

#=================================================
# SPECIFIC SETUP
#=================================================

# Copy and set Wallabag dist configuration
wb_conf="${TMPDIR}/app/config/parameters.yml"
cp ../conf/parameters.yml "$wb_conf"
ynh_replace_string "{DBNAME}" "${db_name}" "$wb_conf"
ynh_replace_string "{DBUSER}" "${db_user}" "$wb_conf"
ynh_replace_string "{DBPASS}" "${dbpass}" "$wb_conf"
ynh_replace_string "{DESKEY}" "${deskey}" "$wb_conf"

# Replace files and set permissions
ynh_secure_remove "${final_path}"
sudo mv "$TMPDIR" "${final_path}"
sudo chown -R $app: "${final_path}"
sudo chmod 755 $final_path

# Upgrade database and clear the cache
exec_console $app "${final_path}" doctrine:migrations:migrate
exec_console $app "${final_path}" cache:clear

# Configure Wallabag instance URL
ynh_mysql_connect_as "$db_name" "$dbpass" "$db_user"  <<< "UPDATE craue_config_setting SET value = 'https://$domain$path_url' WHERE name = 'wallabag_url'"

#=================================================
# NGINX CONFIGURATION
#=================================================

# Copy and set nginx configuration
if [[ "$path_url" == "/" ]] ; then
  nginx_conf=$PKGDIR/conf/nginx_root.conf
else
  nginx_conf=$PKGDIR/conf/nginx_sub_dir.conf
fi
ynh_replace_string "{LOCATION}" "${path_url:-/}" "$nginx_conf"
ynh_replace_string "{PATH}" "$path_url" "$nginx_conf"
ynh_replace_string "{DESTDIR}" "$final_path" "$nginx_conf"
ynh_replace_string "{POOLNAME}" "$app" "$nginx_conf"
ynh_replace_string "{APP}" "$app" "$nginx_conf"
sudo cp "$nginx_conf" "/etc/nginx/conf.d/${domain}.d/${app}.conf"

# Copy and set php-fpm configuration
phpfpm_conf="/etc/php5/fpm/pool.d/${app}.conf"
ynh_replace_string "{POOLNAME}" "${app}" "$PKGDIR/conf/php-fpm.conf"
ynh_replace_string "{DESTDIR}" "${final_path}" "$PKGDIR/conf/php-fpm.conf"
ynh_replace_string "{USER}" "${app}" "$PKGDIR/conf/php-fpm.conf"
sudo cp $PKGDIR/conf/php-fpm.conf "$phpfpm_conf"


# Set SSOwat rules
ynh_app_setting_set "$app" unprotected_uris "/"

#=================================================
# RELOAD NGINX
#=================================================
sudo systemctl restart php5-fpm
sudo systemctl reload nginx
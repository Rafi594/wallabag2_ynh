#!/bin/bash

#=================================================
# GENERIC STARTING
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

ynh_abort_if_errors	# Stop script if an error is detected

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

# Retrieve app id
app=$YNH_APP_INSTANCE_NAME

# Retrieve arguments
domain=$YNH_APP_ARG_DOMAIN
path_url=$YNH_APP_ARG_PATH
admin=$YNH_APP_ARG_ADMIN

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================

CHECK_USER "$admin"	# Check if admin user exists
path_url=$(ynh_normalize_url_path $path_url)	# Check and normalize path
CHECK_DOMAINPATH	# Check domain and path availability
CHECK_FINALPATH # Check if destination directory is not already in use

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================

ynh_app_setting_set $app domain "$domain"
ynh_app_setting_set $app path_url "$path_url"
ynh_app_setting_set $app admin "$admin"

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# INSTALL DEPENDENCIES
#=================================================

ynh_install_app_dependencies "$PKG_DEPENDENCIES"

#=================================================
# CREATE A MYSQL DB
#=================================================

db_name=$(ynh_sanitize_dbid $app)
db_user="$db_name"

# Generate random DES key & password
deskey=$(ynh_string_random 24)
dbpass=$(ynh_string_random)
ynh_app_setting_set "$app" mysqlpwd "$dbpass"
ynh_app_setting_set "$app" deskey "$deskey"
ynh_app_setting_set "$app" db_name "$db_name"

# Initialize database
ynh_mysql_create_db "$db_name" "$db_user" "$dbpass"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

ynh_app_setting_set $app final_path "$final_path"
# Create tmp directory and fetch app inside
TMPDIR=$(mktemp -d)
extract_wallabag "$TMPDIR"

#=================================================
# CREATE DEDICATED USER
#=================================================

ynh_system_user_create $app	# Create a dedicated system user

#=================================================
# SPECIFIC SETUP
#=================================================

# Copy and set Wallabag dist configuration
wb_conf="${TMPDIR}/app/config/parameters.yml"
cp ../conf/parameters.yml "$wb_conf"
ynh_replace_string "{DBNAME}" "${db_name}" "$wb_conf"
ynh_replace_string "{DBUSER}" "${db_user}" "$wb_conf"
ynh_replace_string "{DBPASS}" "${dbpass}" "$wb_conf"
ynh_replace_string "{DESKEY}" "${deskey}" "$wb_conf"

# Install files and set permissions
sudo mv "$TMPDIR" "$final_path"

# Set rights for www-data
sudo chown -R $app: $final_path

# Install dependencies and Wallabag
exec_console $app "$final_path" wallabag:install

# Add users to Wallabag
for username in $(ynh_user_list); do
  user_email=$(sudo yunohost user info "$username" --output-as plain \
                 | ynh_get_plain_key mail)
  user_pass=$(ynh_string_random)
  exec_console $app "$final_path" fos:user:create \
      "$username" "$user_email" "$user_pass"
done

# Set admin user
exec_console $app "$final_path" fos:user:promote --super "$admin"

#=================================================
# NGINX CONFIGURATION
#=================================================

# Copy and set nginx configuration
if [[ "$path_url" == "/" ]] ; then
  nginx_conf=$PKGDIR/conf/nginx_root.conf
else
  nginx_conf=$PKGDIR/conf/nginx_sub_dir.conf
fi
ynh_replace_string "{LOCATION}" "${path_url:-/}" "$nginx_conf"
ynh_replace_string "{PATH}" "$path_url" "$nginx_conf"
ynh_replace_string "{DESTDIR}" "$final_path" "$nginx_conf"
ynh_replace_string "{POOLNAME}" "$app" "$nginx_conf"
ynh_replace_string "{APP}" "$app" "$nginx_conf"
sudo cp "$nginx_conf" "/etc/nginx/conf.d/${domain}.d/${app}.conf"

# Copy and set php-fpm configuration
phpfpm_conf="/etc/php5/fpm/pool.d/${app}.conf"
ynh_replace_string "{POOLNAME}" "${app}" "$PKGDIR/conf/php-fpm.conf"
ynh_replace_string "{DESTDIR}" "${final_path}" "$PKGDIR/conf/php-fpm.conf"
ynh_replace_string "{USER}" "${app}" "$PKGDIR/conf/php-fpm.conf"
sudo cp $PKGDIR/conf/php-fpm.conf "$phpfpm_conf"

# Set SSOwat rules
ynh_app_setting_set "$app" unprotected_uris "/"

#=================================================
# RELOAD NGINX
#=================================================
sudo systemctl restart php5-fpm
sudo systemctl reload nginx
